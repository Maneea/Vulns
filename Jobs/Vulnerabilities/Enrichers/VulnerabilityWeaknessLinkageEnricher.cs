using Microsoft.Extensions.DependencyInjection;

using Vulns.Core;
using Vulns.Infrastructure;
using Vulns.Jobs.Base;

namespace Vulns.Jobs.Vulnerabilities;
public class VulnerabilityWeaknessLinkageEnricher : IEnricher<Vulnerability>
{
    public int ExecutionOrder => 2;

    public string Name => nameof(VulnerabilityWeaknessLinkageEnricher);
    public IEnumerable<Vulnerability> Enrich(IEnumerable<Vulnerability> entities, IServiceScope scope)
    {
        var cweRepo = scope.ServiceProvider.GetRequiredService<WeaknessRepository>();
        var weaknesses = cweRepo.AllAsync(default).Result;
        foreach (var vuln in entities)
        {
            var vulnWeaknesses = vuln.Weaknesses;
            if (vulnWeaknesses == null || vulnWeaknesses.Count == 0) continue;
            vuln.Weaknesses = new List<Weakness>();
            foreach (var weakness in vulnWeaknesses)
            {
                var weaknessToAdd = weaknesses.Where(w => w.Id == weakness.Id).FirstOrDefault();
                if (weaknessToAdd != null)
                    vuln.Weaknesses.Add(weaknessToAdd);
            }
        }
        return entities;
    }
}