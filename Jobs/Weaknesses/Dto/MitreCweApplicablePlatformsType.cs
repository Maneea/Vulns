//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.0.631.0 using the following command:
// xscgen cwe_schema_latest.xsd --namespace=http://cwe.mitre.org/cwe-6=Vulns.Fetchers.Dtos --output=./out/ --disableComments --separateFiles --uniqueTypeNames --netCore --verbose --collectionType=System.Collections.Generic.IList`1 --collectionImplementationType=System.Collections.Generic.List`1 --generatedCodeAttribute=false --description=false --disableComments
namespace Vulns.Jobs.Weaknesses
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.631.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ApplicablePlatformsType", Namespace="http://cwe.mitre.org/cwe-6")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MitreCweApplicablePlatformsType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MitreCweMitreCweApplicablePlatformsTypeLanguage> _language;
        
        [System.Xml.Serialization.XmlElementAttribute("Language")]
        public System.Collections.Generic.List<MitreCweMitreCweApplicablePlatformsTypeLanguage> Language
        {
            get
            {
                return this._language;
            }
            private set
            {
                this._language = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LanguageSpecified
        {
            get
            {
                return (this.Language.Count != 0);
            }
        }
        
        public MitreCweApplicablePlatformsType()
        {
            this._language = new System.Collections.Generic.List<MitreCweMitreCweApplicablePlatformsTypeLanguage>();
            this._operating_System = new System.Collections.Generic.List<MitreCweMitreCweApplicablePlatformsTypeOperating_System>();
            this._architecture = new System.Collections.Generic.List<MitreCweMitreCweApplicablePlatformsTypeArchitecture>();
            this._technology = new System.Collections.Generic.List<MitreCweMitreCweApplicablePlatformsTypeTechnology>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MitreCweMitreCweApplicablePlatformsTypeOperating_System> _operating_System;
        
        [System.Xml.Serialization.XmlElementAttribute("Operating_System")]
        public System.Collections.Generic.List<MitreCweMitreCweApplicablePlatformsTypeOperating_System> Operating_System
        {
            get
            {
                return this._operating_System;
            }
            private set
            {
                this._operating_System = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Operating_SystemSpecified
        {
            get
            {
                return (this.Operating_System.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MitreCweMitreCweApplicablePlatformsTypeArchitecture> _architecture;
        
        [System.Xml.Serialization.XmlElementAttribute("Architecture")]
        public System.Collections.Generic.List<MitreCweMitreCweApplicablePlatformsTypeArchitecture> Architecture
        {
            get
            {
                return this._architecture;
            }
            private set
            {
                this._architecture = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ArchitectureSpecified
        {
            get
            {
                return (this.Architecture.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MitreCweMitreCweApplicablePlatformsTypeTechnology> _technology;
        
        [System.Xml.Serialization.XmlElementAttribute("Technology")]
        public System.Collections.Generic.List<MitreCweMitreCweApplicablePlatformsTypeTechnology> Technology
        {
            get
            {
                return this._technology;
            }
            private set
            {
                this._technology = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TechnologySpecified
        {
            get
            {
                return (this.Technology.Count != 0);
            }
        }
    }
}
